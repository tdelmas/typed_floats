name: Tests

on:
  push:
    branches: ["main"]
    paths:
    - 'typed_floats/**'
    - 'typed_floats_macros/**'
    - 'Cargo.toml'
    - 'Cargo.lock'
  pull_request:
    branches: ["main"]
    paths:
    - 'typed_floats/**'
    - 'typed_floats_macros/**'
    - 'Cargo.toml'
    - 'Cargo.lock'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0 

jobs:
  cargo-build:
    runs-on: ubuntu-latest
    name: Tests on rust ${{ matrix.version }} features "${{ matrix.features }}"
    strategy:
      matrix:
        version: [
          "beta",
          "stable",
          "1.70",
        ]
        features: [
            "",
            "std",
            "serde",
            "libm",
            "std,serde",
            "std,libm",
            "serde,libm",
            "std,serde,libm",
        ]

    steps:
      - uses: actions/checkout@v4
      - run: rustup default ${{ matrix.version }}
      # Check that it builds with all features combinations
      - run: cd typed_floats && cargo build --no-default-features --features "${{ matrix.features }}"
      # Check that it builds in release mode with all features combinations
      - run: cd typed_floats && cargo build --release --no-default-features --features "${{ matrix.features }}"
      # Check that it builds test in release mode with all features combinations
      - run: cd typed_floats && cargo test --no-run --release --no-default-features --features "${{ matrix.features }}"

  cargo-test:
    runs-on: ubuntu-latest
    name: Tests on rust toolchain ${{ matrix.version }}
    strategy:
      matrix:
        version: [
          "beta",
          "stable",
          "1.70",
        ]

        cargo_options: [
          # Default tests (with std feature only)
          "",
          ## Test without any feature (no std)
          "--no-default-features",
          "--test 'serde' --no-default-features --features serde",
          "--no-default-features --features libm",
          # Test serde (with std)
          "test --features serde",
          ## Run tests in release mode with the two main features: serde and std
          "--release --no-default-features --features serde,std",
        ]

    steps:
      - uses: actions/checkout@v4
      - run: rustup default ${{ matrix.version }}
      - run: cargo --version
      - run: cd typed_floats && cargo test ${{ matrix.cargo_options }}
        
  clippy:
    runs-on: ubuntu-latest
    name: Clippy

    steps:
      - uses: actions/checkout@v4
      - run: cargo clippy --verbose --all-features

  semver-checks:
    runs-on: ubuntu-latest
    name: Semver checks
    strategy:
      matrix:
        features: [
          "",
          "--features std",
          "--features serde",
          "--features libm",
          "--features std --features serde",
          "--features std --features libm",
          "--features serde --features libm",
          "--features std --features serde --features libm",
        ]

    steps:
      - uses: actions/checkout@v4
      - run: cargo install cargo-semver-checks --locked
      - run: cd typed_floats && cargo semver-checks --only-explicit-features ${{ matrix.features }}

  check-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: rustup default nightly
      - run: cargo install lychee
      - run: cd typed_floats && cargo doc --all-features
      - run: lychee --offline "./target/doc/typed_floats/**/*.html"
